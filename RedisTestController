package com.demo.controller;


import com.demo.Model.User;
import com.demo.Service.RedisService;
import com.demo.Utils.Base64Utils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import javax.ws.rs.QueryParam;
import java.io.*;
import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/redis")
//@Path("/redis")
public class RedisTestController {
    @Autowired
    RedisService redisService;

    private Integer num =1 ;
    private User user = new User(1,"");

    //http://localhost:8080/redis/put
    @RequestMapping("/put")
    public String putString(@RequestParam String key, @RequestParam String value) {
        redisService.putString(key,value);
        File file = new File("D:\\LearningCode\\springboot_helloworld\\src\\main\\resources\\testFiles\\xy天域.pdf");
        InputStream inputStream = null;
        try {
            inputStream=new FileInputStream(file);
            String streamBase64 = Base64Utils.inputStream2Base64(inputStream);
            redisService.putString(key+111,streamBase64);
        } catch (Exception e) {
            e.printStackTrace();
        }

        return "success!";
    }

    //http://localhost:8080/redis/get
    @RequestMapping("/get")
    public String getValue(@RequestParam String key) {
        String value = redisService.getValue(key);
        String streamBase64 = redisService.getValue(key+111);

        try {
            OutputStream swapStream = new FileOutputStream("D:\\TestBase64\\xy.pdf");
            Base64Utils.base2InputStream2(streamBase64,swapStream);
            return "222";

        } catch (Exception e) {
            e.printStackTrace();
        }

        return value ;
    }

    //http://localhost:8080/redis/testParam3
    @RequestMapping(value = "testParam3")
    //@POST
    //@Path("/testParam3")
    //@ResponseBody
    public Map<String, Object> testParam3(@QueryParam("redis_id") String redis_id, @QueryParam("value") String value, @QueryParam(value = "ex") Long expireTime) {

        System.out.println(redis_id);
        System.out.println(value);
        System.out.println(expireTime);
        Map<String, Object> resultMap = new HashMap<>();
        resultMap.put("redis_id", redis_id+"111");
        resultMap.put("value", value+"222");
        resultMap.put("ex", expireTime+"333");
        return resultMap;
    }



}
